#!/usr/bin/env bash
if ! bspc wm -g &>/dev/null; then
  exit 1
fi

pgrep -x sxhkd &> /dev/null || sxhkd &

# while pgrep -u $UID -f bspwm_window_titles >/dev/null; do pkill -f bspwm_window_titles; done
# bspwm_window_titles.sh &

~/.config/bspwm/scripts/polybar-init.sh &
# check if dual monitor config should be used
case $(uname -n) in
    (pc) ~/.config/bspwm/scripts/multiple-monitors.sh & \
    bspc monitor DisplayPort-1 -d 1 2 3
    bspc monitor DVI-D-0 -d 4 5 6 ;;
    (x1) bspc monitor eDP1 -d 1 2 3 4 5 6
        ~/.config/bspwm/scripts/switchnodes.sh & ;;
esac

# Set desktop for mimetypes
export XDG_CURRENT_DESKTOP="bspwm"

# Fix Java apps
export _JAVA_AWT_WM_NONREPARENTING=1

# Avoid overflowing shadows with multiple monitors
~/.config/bspwm/scripts/shadows.sh &

# --------------------------------------------------------

bspc config border_width                2
bspc config window_gap                  10
bspc config split_ratio                 0.40

bspc config presel_feedback_color       '#766564'
bspc config normal_border_color         '#766564'
bspc config active_border_color         '#e7e7e7'
bspc config focused_border_color        '#e7e7e7'

bspc config top_padding                 18
bspc config -m DVI-D-0 top_padding      18

bspc config remove_disabled_monitors    true
bspc config remove_unplugged_monitors   true
bspc config merge_overlapping_monitors  false
# bspc config automatic_scheme            spiral
# bspc config initial_polarity            first-child

bspc pointer_action3                    resize_side

bspc config borderless_monocle          true
bspc config gapless_monocle             true
bspc config single_monocle              true

bspc config pointer_follows_monitor     false
bspc config focus_follows_pointer       true

bspc config pointer_motion_interval     10
bspc config ignore_ewmh_focus           true
bspc config honor_size_hints            true

# external rules
bspc config external_rules_command "~/.local/bin/pipgooglechrome"

# remove all rules first
bspc rule -r *:*

bspc rule --add '*:floating' state=floating
bspc rule -a '*:pop-up' state=floating
bspc rule -a '*:*:Live\ Caption' center=true follow=on state=floating
# bspc rule -a '*:Toolkit:Picture-in-Picture' state=floating sticky=on
# bspc rule -a '*:Toolkit:Live-Caption' state=floating sticky=on
bspc rule -a Chromium follow=on focus=on state=floating rectangle=1200x900+0+0 center=true
bspc rule -a Alacritty:Float follow=on focus=on state=floating rectangle=800x600+0+0 center=true
bspc rule -a Screenkey manage=off
bspc rule -a Ripcord follow=on focus=on desktop=^8
bspc rule -a Sxiv follow=on focus=on state=floating rectangle=600x500+0+0 center=true
bspc rule -a gcolor2 state=floating follow=on focus=on rectangle=500x300+200+200
bspc rule -a Yad follow=on focus=on state=floating rectangle=400x400+0+0 center=true
bspc rule -a Peek state=floating rectangle=600x600+0+0 center=true

# trap 'jobs -p | xargs kill' EXIT
# wait

########################
# begin startup scripts

is_running() {
    pgrep --full "^$1" &> /dev/null
}

~/.fehbg &

is_running 'picom'         || picom -b --experimental-backends &
is_running 'dunst'         || dunst &
is_running 'redshift'      || redshift &

xset dpms 600 900 0 &
xset r rate 350 60 &

xsetroot -cursor_name left_ptr &
setxkbmap -option altwin:swap_alt_win &

/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
gnome-keyring-daemon --start --components=pkcs11 &

case $(uname -n) in
    (pc) xinput --set-prop 14 "libinput Accel Speed" 0 &
          # xinput set-prop "pointer:ELECOM TrackBall Mouse HUGE TrackBall" 'libinput Button Scrolling Button' 12 &
          # xinput set-prop "pointer:ELECOM TrackBall Mouse HUGE TrackBall" 'libinput Scroll Method Enabled' 0 0 1 &
          xset m 1/2 0 &
          is_running 'imwheel' || imwheel & ;;
    (x1) xinput set-prop "TPPS/2 Elan TrackPoint" "libinput Accel Speed" 1 &
          xinput set-prop "TPPS/2 Elan TrackPoint" "libinput Accel Profile Enabled" 0, 1 &
          setxkbmap -option ctrl:nocaps & ;;
esac

# hide mouse on writting
if $(hash unclutter); then
    is_running 'unclutter' || unclutter -idle 1 &
fi

########
# begin rclone init
########

# ~/.config/bspwm/scripts/rclone-init.sh &
# startup
# ~/.config/bspwm/scripts/init.sh &
